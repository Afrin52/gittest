# Generated by Django 3.2.7 on 2022-01-03 10:18

import counterbookuser.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CounterBookUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('business_address', models.TextField(blank=True, null=True)),
                ('business_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('business_phone', models.CharField(blank=True, max_length=20, null=True, validators=[counterbookuser.models.validate_phone])),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo/')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[counterbookuser.models.validate_phone])),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to='user_pictures')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_email_comment', models.BooleanField(default=False)),
                ('is_email_reminder', models.BooleanField(default=False)),
                ('is_email_edit', models.BooleanField(default=False)),
                ('is_push_comment', models.BooleanField(default=False)),
                ('is_push_reminder', models.BooleanField(default=False)),
                ('is_push_edit', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_picture', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='add', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(blank=True, related_name='team_members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Counter Book User',
                'verbose_name_plural': 'Counter Book Users',
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.PositiveIntegerField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[counterbookuser.models.validate_phone])),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Completed', 'Completed')], default='Active', max_length=30)),
                ('delivery_address', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_date', models.DateField()),
                ('delivery_time', models.TimeField()),
                ('is_delete', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
                ('is_send', models.BooleanField(default=False)),
                ('is_send_driver', models.BooleanField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('pdf_path', models.FileField(blank=True, null=True, upload_to='deliveries_pdf/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Delivery',
                'verbose_name_plural': 'Deliveries',
            },
        ),
        migrations.CreateModel(
            name='JobOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.PositiveIntegerField(blank=True, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[counterbookuser.models.validate_phone])),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Pending', 'Pending'), ('PendingPickup', 'PendingPickup'), ('Completed', 'Completed')], default='Active', max_length=30)),
                ('is_delete', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
                ('is_send', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('pdf_path', models.FileField(blank=True, null=True, upload_to='orders_pdf/')),
                ('order_time', models.TimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Job Order',
                'verbose_name_plural': 'Job Orders',
            },
        ),
        migrations.CreateModel(
            name='UploadAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='job_attachment/')),
            ],
            options={
                'verbose_name': 'Upload Attachment',
                'verbose_name_plural': 'Upload Attachments',
            },
        ),
        migrations.CreateModel(
            name='TwoFactorAuthentication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.PositiveIntegerField()),
                ('otp_status', models.CharField(choices=[('delivered', 'Delivered'), ('not_delivered', 'Not Delivered'), ('successful', 'Successful'), ('expired', 'Expired')], max_length=20, verbose_name='OTP Status')),
                ('is_verified', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expired_datetime', models.DateTimeField(verbose_name='Expired At')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Two Factor Authentication',
                'verbose_name_plural': 'Two Factor Authentication',
                'db_table': 'two_factor_authentication',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_text', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_history', to='counterbookuser.delivery')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_history', to='counterbookuser.joborder')),
            ],
            options={
                'verbose_name': 'Order History',
                'verbose_name_plural': 'Order Histories',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('type', models.CharField(blank=True, choices=[('Reminder', 'Reminder'), ('Edit', 'Edit'), ('Comment', 'Comment'), ('Create', 'Create')], max_length=10, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('edited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.AddField(
            model_name='joborder',
            name='attachment',
            field=models.ManyToManyField(blank=True, to='counterbookuser.UploadAttachment'),
        ),
        migrations.AddField(
            model_name='joborder',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='joborder',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_update', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ForgotPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_hash', models.CharField(default=counterbookuser.models.generate_hash, max_length=255)),
                ('used', models.BooleanField(default=False)),
                ('used_date', models.DateTimeField(blank=True, null=True)),
                ('valid_till', models.DateTimeField(default=counterbookuser.models.expired_at)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Forgot Password',
                'verbose_name_plural': 'Forgot Passwords',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[counterbookuser.models.validate_phone])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
            },
        ),
        migrations.AddField(
            model_name='delivery',
            name='attachment',
            field=models.ManyToManyField(blank=True, to='counterbookuser.UploadAttachment'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='delivery',
            name='driver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='delivery',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_update', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('commented_at', models.DateTimeField(auto_now_add=True)),
                ('commented_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_comment', to='counterbookuser.delivery')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_comment', to='counterbookuser.joborder')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
